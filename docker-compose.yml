networks:
  global-network:
  app-network:
    driver: bridge

services:
  app-server:
    container_name: app
    networks:
      - app-network
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://app-postgres:5432/appdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pwd1
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_APPLICATION_NAME: Libros
    depends_on:
      app-postgres:
        condition: service_started
      loki:
        condition: service_started
      zipkin:
        condition: service_healthy
    ports:
      - '8080:8080'

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    networks:
      - app-network
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - app-server

  loki:
    image: grafana/loki:2.9.7
    container_name: loki
    # command: -config.file=/etc/loki/config.yml
    networks:
      - app-network
    volumes:
      # - ./monitoring/loki/config.yml:/etc/loki/config.yml:ro
      - loki_data:/loki
    ports:
      - "3100:3100"

  grafana:
    image: grafana/grafana-oss:11.2.0
    container_name: grafana
    networks:
      - app-network
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3010"
    depends_on:
      - prometheus
      - loki
      - zipkin

  zipkin:
    image: openzipkin/zipkin:2.24
    container_name: zipkin
    networks:
      - app-network
    ports:
      - "9411:9411"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9411/health || wget -qO- http://localhost:9411/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 5s

  app-postgres:
    image: postgres:15-alpine
    container_name: app_postgres_db
    networks:
      - app-network
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pwd1
      POSTGRES_DB: appdb
    volumes:
      - app_pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
volumes:
  app_pgdata:
  prometheus_data:
  loki_data:
  grafana_data:

